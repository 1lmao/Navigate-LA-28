# server/main.py

# Import necessary modules and libraries
from fastapi import FastAPI  # FastAPI framework for building APIs
from dotenv import load_dotenv  # For loading environment variables from a .env file
import os  # For interacting with the operating system
import logging  # For configuring and handling logging

# Import custom middleware and routers
# Custom CORS middleware setup
from middleware.cors_config import add_cors_middleware
from routes import api_router  # Main API router for the application
from fastapi.middleware.cors import CORSMiddleware  # Built-in CORS middleware

# Configure logging for SQLAlchemy
# Logs all SQL statements generated by SQLAlchemy for debugging purposes
logging.basicConfig()
logging.getLogger("sqlalchemy.engine").setLevel(logging.INFO)

# Load environment variables from a .env file
load_dotenv()

# Fetch environment variables or use default values if not set
DATABASE_URL = os.getenv(
    "DATABASE_URL", "postgresql+asyncpg://user:password@localhost/dbname"
)  # URL for the database connection
# Secret key for the application
SECRET_KEY = os.getenv("SECRET_KEY", "defaultsecretkey")

# Initialize the FastAPI application
app = FastAPI(
    title="Your API Title",  # Title of the API
    description="Description of your API functionality.",  # API description
    version="1.0.0",  # Version of the API
    docs_url="/docs",  # Path for Swagger UI documentation
    redoc_url="/redoc",  # Path for ReDoc documentation
    openapi_url="/openapi.json",  # Path for OpenAPI schema
)

# Add built-in CORS middleware to the FastAPI app
# This is configured to allow all origins, methods, and headers during development
app.add_middleware(
    CORSMiddleware,
    # Allow all origins (change to specific origins in production)
    allow_origins=["*"],
    allow_credentials=False,  # Disable credentials for CORS
    allow_methods=["*"],  # Allow all HTTP methods
    allow_headers=["*"],  # Allow all headers
)

# Add custom CORS middleware from the application
# This function is defined in `middleware/cors_config.py`
add_cors_middleware(app)

# Include the main API router
# All routes defined in `routes` will be available under the "/api" prefix
app.include_router(api_router, prefix="/api", tags=["API"])


@app.get("/")
async def read_root():
    """
    Root endpoint to verify the server is running.

    Returns:
        A JSON response with a welcome message.
    """
    return {"message": "Welcome to the API!"}


@app.get("/url-list")
def get_all_urls():
    """
    Endpoint to list all registered URLs in the application.

    Returns:
        A JSON list of all routes in the application with their path and name.
    """
    url_list = [{"path": route.path, "name": route.name}
                for route in app.routes]
    return url_list
